
name: String

on: OnTrigger?

jobs: Mapping<String(matches(Regex("^[A-Za-z][A-Za-z\\s\\d_-]*$"))), Job>?

permissions: Mapping<Permission, List<String>>?

typealias Permission = "contents"

class OnTrigger {
    push: PushTriggerConfig?
    pull_request: PullRequestTriggerConfig?
}

class PushTriggerConfig {
    branches: List<String>
}

class PullRequestTriggerConfig {
    branches: List<String>
}

class Job {
    strategy: JobStrategy?
    `runs-on`: String = "ubuntu-latest"
    outputs: Mapping<String, String>?
    `if`: String?
    permissions: Mapping<Permission, List<String>>?
    needs: List<String>?
    steps: List<Step>
}

class JobStrategy {
    matrix: Mapping<String, Any>
}

abstract class Step {
    id: String?
    name: String?
    `if`: String?
}

class ActionStep extends Step {
    uses: String
    with: Mapping<String, Any>?
    env: Mapping<String, Any>?
}

class CommandStep extends Step {
    run: String
}